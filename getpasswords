#!/bin/bash

# This script is built around xdotool.
# Its purpose is to activate the browser window, open lastpass,
# copy the password, close lastpass, and paste the password into
# the window that was currently active before the script was ran.
#
# Author: Chris Jones
# Date: Sep 4 2013

### Begin configuration ###
browserClassName="Vimperator"
tabCloseShortcut="d"
lastpassOffsetX=25
lastpassOffsetY=45
passwordOffsetX=-50
passwordOffsetY=70
termString="s@"
### End configuration ###

sleep 0.5

# Accepts the password to search for in LastPass
if [[ -z $1 ]]
then
  echo "A search term is required."
  exit 1
else
  searchTerm=$1
fi

mode=$2

if [[ "$mode" == "left" ]]
then
  buttonRight=1
  buttonLeft=3
else
  buttonRight=3
  buttonLeft=1
fi

# Gets the current window and the browser window
currentWid=$(xdotool getactivewindow)
browserWid=$(xdotool search "${browserClassName}" | head -1)

# Makes the geometry and postion of the browser window available in this script
eval $(xdotool getwindowgeometry --shell $browserWid)

# Calculates the mouse coordinates
browserMouseX=$((X + WIDTH - lastpassOffsetX))
browserMouseY=$((Y + lastpassOffsetY))

# Activates the browser applet
xdotool windowactivate --sync $browserWid
xdotool mousemove --sync --clearmodifiers $browserMouseX $browserMouseY click $buttonLeft
sleep 0.1

# Gets the password

xdotool type --clearmodifiers "${searchTerm}"
sleep 0.1
xdotool mousemove_relative --sync --clearmodifiers -- $passwordOffsetX $passwordOffsetY click $buttonRight
xdotool key --clearmodifiers Down Down Down Return

# Go back to the previous window
xdotool windowactivate --sync $currentWid

# If we were in a terminal, user ctrl+shift+v to paste, otherwise use ctrl+v
#if [[ $(xdotool getwindowname $currentWid) == *"${termString}"* ]]
#then
  pasteCommand=ctrl+shift+v
#else
#  pasteCommand=ctrl+v
#fi

# Paste the password and press enter
xdotool key --clearmodifiers --delay 50 $pasteCommand Return
